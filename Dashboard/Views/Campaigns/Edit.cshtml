@model Dashboard.Models.Campaign

@{
    ViewBag.Title = "Edit Campaign";
    List<Dashboard.Models.Trade> currentTrades = ViewBag.Trades;
    List<TradeDetails> ownerDetails = ViewBag.Owners;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-lg-12">
            <div class="hpanel horange">
                <div class="panel-heading">
                </div>
                <div class="panel-body" style="margin-right: 100px; margin-left: 100px;">
                    <form class="form-horizontal" id="createCampaign">
                        <h4 class="modal-title" style="font-weight: 100; color: #c0392b;">Update Campaign</h4>
                        <hr />
                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Campaign Name</label></div>
                                    <div class="col-lg-6">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Date Submitted</label></div>
                                    <div class="col-lg-4">
                                        <div class='input-group date' id='datetimepicker1'>
                                            @Html.EditorFor(model => model.DateSubmitted, new { htmlAttributes = new { @class = "form-control datefield" } })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Campaign Manager</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.CampaignProjectManager, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Trades Included</label></div>
                                    <div class="col-lg-6">
                                        @{
                        foreach (var recordDetailse in ownerDetails.Where(p => p.CampaignId == @Model.ID))
                        {
                            <span class="badge" style="background-color: @recordDetailse.Color;">@recordDetailse.TradeName</span>
    }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Email Status</label></div>
                                    <div class="col-lg-6">
                                        <select id="EmailStatusOptions" style="width:100px;">
                                            <option value=" "></option>
                                            <option value="Not Started">Not Started</option>
                                            <option value="In Progress">In Progress</option>
                                            <option value="Delayed">Delayed</option>
                                            <option value="Completed">Completed</option>
                                        </select>
                                        @Html.HiddenFor(model => model.Email_Status, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Campaign Status</label></div>
                                    <div class="col-lg-6">
                                        @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-2"><label class="pad10">Campaign Objective</label></div>
                                    <div class="col-lg-9">@Html.EditorFor(model => model.Objective, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Campaign Plan</label></div>
                                    <div class="col-lg-6">@Html.DropDownList("CampaignPlanID", null, htmlAttributes: new { @class = "form-control" })</div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Campaign Type</label></div>
                                    <div class="col-lg-6">@Html.DropDownList("CampaignTypeID", null, htmlAttributes: new { @class = "form-control" })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Email System</label></div>
                                    <div class="col-lg-6">
                                        @Html.DropDownList("EmailSystemID", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Campaign Lead</label></div>
                                    <div class="col-lg-6">@Html.DropDownList("CampaignLeadID", null, htmlAttributes: new { @class = "form-control" })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Start Date</label></div>
                                    <div class="col-lg-4">
                                        <div class='input-group date' id='startDatePicker'>
                                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datefield" } })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">End Date</label></div>
                                    <div class="col-lg-4">
                                        <div class='input-group date' id='endDatePicker'>
                                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datefield" } })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Account Size</label></div>
                                    <div class="col-lg-6">
                                        @Html.DropDownList("AccountSizeMultiple", null, htmlAttributes: new { @class = "form-control", multiple = "multiple" })
                                        @Html.HiddenFor(model => model.AccountSize, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Campaign Market(s)</label></div>
                                    <div class="col-lg-6">
                                        @Html.DropDownList("CampaignMarketMultiple", null, htmlAttributes: new { @class = "form-control", multiple = "multiple" })
                                        @Html.HiddenFor(model => model.CampaignMarket, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Landing Page</label></div>
                                    <div class="col-lg-6">
                                        <select id="LandingPageOptions" style="width:100px;">
                                            <option value=""></option>
                                            <option value="Yes">Yes</option>
                                            <option value="No">No</option>
                                        </select>
                                        @Html.HiddenFor(model => model.LandingPage, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Landing Page Contact</label></div>
                                    <div class="col-lg-6">
                                        <select id="LandingContact" style="width:200px;">
                                            <option value=" "></option>
                                            <option value="Kellie Beard">Kellie Beard</option>
                                            <option value="Jacob Buckles">Jacob Buckles</option>
                                            <option value="Jamie Skaggs">Jamie Skaggs</option>
                                        </select>
                                        @Html.HiddenFor(model => model.LandingUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*start here*@

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Email Template Type</label></div>
                                    <div class="col-lg-6">
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <select id="TemplateTypes" style="width:200px;">
                                                    <option value=" "></option>
                                                    <option value="TemplateA">TemplateA</option>
                                                    <option value="TemplateB">TemplateB</option>
                                                    <option value="TemplateC">TemplateC</option>
                                                </select>
                                                <a class="btn btn-default btn-sm" id="showtemplate" target="_blank">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                                <a class="btn btn-default btn-sm" id="createtemplate">
                                                    <i class="fa fa-plus-square"></i>
                                                </a>
                                            </div>
                                        </div>
                                        @Html.HiddenFor(model => model.TemplateType, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-2"><label class="pad10">Job Functions</label></div>
                                    <div class="col-lg-10">
                                        <select id="campjobfunctions" multiple="multiple">
                                            <option value="60 : CEO/Executive">60 : CEO/Executive</option>
                                            <option value="61 : Mgr. director/Owner">61 : Mgr. director/Owner</option>
                                            <option value="62 : Purchasing Manager">62 : Purchasing Manager</option>
                                            <option value="63 : Purchasing Employee">63 : Purchasing Employee</option>
                                            <option value="64 : Technical Director">64 : Technical Director</option>
                                            <option value="65 : Project Manager">65 : Project Manager</option>
                                            <option value="66 : Jobsite Mng/Superint">66 : Jobsite Mng/Superint</option>
                                            <option value="67 : Foreman">67 : Foreman</option>
                                            <option value="68 : Master Craftsman">68 : Master Craftsman</option>
                                            <option value="69 : Facility/Maintenance">69 : Facility/Maintenance</option>
                                            <option value="70 : Mechanic/Tradesman">70 : Mechanic/Tradesman</option>
                                            <option value="71 : Storeman/Tool Crib">71 : Storeman/Tool Crib</option>
                                            <option value="72 : Finance Manager">72 : Finance Manager</option>
                                            <option value="73 : Accounts pay. empl.">73 : Accounts pay. empl.</option>
                                            <option value="74 : Sales Manager">74 : Sales Manager</option>
                                            <option value="75 : Architect">75 : Architect</option>
                                            <option value="76 : Engineer/Specifier">76 : Engineer/Specifier</option>
                                            <option value="77 : Secretary/Reception">77 : Secretary/Reception</option>
                                            <option value="78 : Clerk/Employee">78 : Clerk/Employee</option>
                                            <option value="79 : HS&E Manager">79 : HS&E Manager</option>
                                            <option value="80 : BIM/CAD Manager">80 : BIM/CAD Manager</option>
                                        </select>
                                        @Html.HiddenFor(model => model.JobFunctions, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*end here*@

                        <div class="row padfull20">
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-2"><label class="pad10">Product(s)</label></div>
                                    <div class="col-lg-10">@Html.TextAreaFor(model => model.CampaignProducts, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-2"><label class="pad10">Success Metric(s)</label></div>
                                    <div class="col-lg-10">@Html.TextAreaFor(model => model.SuccessMetric, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-2"><label class="pad10">Notes</label></div>
                                    <div class="col-lg-10">@Html.TextAreaFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-2"><label class="pad10">Email</label></div>
                                    <div class="col-lg-10">@Html.TextAreaFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Emails Deliveries</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.Email_Deliveries, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Website Sessions</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.Website_Sessions, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Transactions</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.Transactions, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Email Recipients</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.Email_Recipients, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Open Rate</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.Open_Rate, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Click Rate</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.Click_Rate, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Bounce Rate</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.Bounce_Rate, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">Conversion Rate</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.Conversion_Rate, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-4">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">US Graph Weeks</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.USGraphWeeks, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">US Graph Revenue</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.USGraphWeekRevenue, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">US Graph Units</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.USGraphWeekUnits, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                        <div class="row padfull20">
                            <div class="col-lg-4">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">CA Graph Weeks</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.CAGraphWeeks, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">CA Graph Revenue</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.CAGraphWeekRevenue, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="row">
                                    <div class="col-lg-4"><label class="pad10">CA Graph Units</label></div>
                                    <div class="col-lg-6">@Html.EditorFor(model => model.CAGraphWeekUnits, new { htmlAttributes = new { @class = "form-control" } })</div>
                                </div>
                            </div>
                        </div>

                    </form>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="save" type="submit" value="Save" class="btn w-xs" style="background-color: #666666; margin-right: 20px; margin-bottom: 100px; margin-top: 20px; width: 280px; float: right; color: white;" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Styles {
    <link href="@Url.Content("~/Content/themes/base/jquery-ui.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/themes/base/jquery.multiselect.css")" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="/Content/bootstrap-datetimepicker.css" />
    <link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote.css" rel="stylesheet">
    @Styles.Render("~/bundles/blueimp/css")
    @Styles.Render("~/bundles/sweetAlert/css")

}

@section Scripts {
    <script src="@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.multiselect.js")"></script>

    @Scripts.Render("~/bundles/validation/js")
    @Scripts.Render("~/bundles/blueimp/js")
    @Scripts.Render("~/bundles/sweetAlert/js")

    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script type="text/javascript" src="/scripts/moment.min.js"></script>
    <script type="text/javascript" src="/scripts/bootstrap-datetimepicker.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote.js"></script>


    <script type="text/javascript">

        $(document).ready(function () {

            $("#datetimepicker1").datetimepicker({
                format: 'MM/DD/YYYY'
            });
            $("#startDatePicker").datetimepicker({
                format: 'MM/DD/YYYY'
            });
            $("#endDatePicker").datetimepicker({
                format: 'MM/DD/YYYY'
            });

            $("#StatusID").select2();
            $("#EmailSystemID").select2();
            $("#CampaignTypeID").select2();
            $("#CampaignOwnersID").select2();
            $("#CampaignLeadID").select2();
            $("#CampaignPlanID").select2();

            $("#CampaignMarketMultiple").select2();
            $("#AccountSizeMultiple").select2();

            $("#LandingPageOptions").select2();
            $("#EmailStatusOptions").select2();

            $("#LandingContact").select2();
            $("#campjobfunctions").select2({ width: '100%' });
            
            $("#TemplateTypes").select2();

            $('#CampaignProducts').summernote();
            $('#Notes').summernote();
            $('#SuccessMetric').summernote();

            // edit

            $('#AccountSizeMultiple').val($("#AccountSize").val().split(','));
            $('#AccountSizeMultiple').trigger('change');

            $('#CampaignMarketMultiple').val($("#CampaignMarket").val().split(','));
            $('#CampaignMarketMultiple').trigger('change');

            $('#LandingPageOptions').val($("#LandingPage").val());
            $('#LandingPageOptions').trigger('change');

            $('#EmailStatusOptions').val($("#Email_Status").val());
            $('#EmailStatusOptions').trigger('change');

            $('#LandingContact').val($("#LandingUrl").val());
            $('#LandingContact').trigger('change');

            $('#TemplateTypes').val($("#TemplateType").val());
            $('#TemplateTypes').trigger('change');

            $('#campjobfunctions').val($("#JobFunctions").val().split(','));
            $('#campjobfunctions').trigger('change');

            $('#CampaignProducts').summernote('code', $('#CampaignProducts').val());
            $('#Notes').summernote('code', $('#Notes').val());

            $('#SuccessMetric').summernote('code', $('#SuccessMetric').val());
            $('#Email').summernote('code', $('#Email').val());

        });

        $("#AccountSizeMultiple").change(function () {
            var theID = [];
            var theSelection = [];
            $.each($("#AccountSizeMultiple").select2('data'), function (key, item) {
                theID.push(item.id);
                theSelection.push(item.text);
            });
            $("#AccountSize").val(theID.join(","));
        });

        $("#CampaignMarketMultiple").change(function () {
            var theID = [];
            var theSelection = [];
            $.each($("#CampaignMarketMultiple").select2('data'), function (key, item) {
                theID.push(item.id);
                theSelection.push(item.text);
            });
            $("#CampaignMarket").val(theID.join(","));
        });

        $("#LandingPageOptions").change(function () {
            var theID = [];
            var theSelection = [];
            $.each($("#LandingPageOptions").select2('data'), function (key, item) {
                theID.push(item.id);
                theSelection.push(item.text);
            });
            $("#LandingPage").val(theID.join(","));
        });

        $("#EmailStatusOptions").change(function () {
            var theID = [];
            var theSelection = [];
            $.each($("#EmailStatusOptions").select2('data'), function (key, item) {
                theID.push(item.id);
                theSelection.push(item.text);
            });
            $("#Email_Status").val(theID.join(","));
        });

        $("#LandingContact").change(function () {
            var theID = [];
            var theSelection = [];
            $.each($("#LandingContact").select2('data'), function (key, item) {
                theID.push(item.id);
                theSelection.push(item.text);
            });
            $("#LandingUrl").val(theID.join(","));
        });

        $("#campjobfunctions").change(function () {
            var theID = [];
            var theSelection = [];
            $.each($("#campjobfunctions").select2('data'), function (key, item) {
                theID.push(item.id);
                theSelection.push(item.text);
            });
            $("#JobFunctions").val(theID.join(","));
        });             

        $("#TemplateTypes").change(function () {
            var theID = [];
            var theSelection = [];
            $.each($("#TemplateTypes").select2('data'), function (key, item) {
                theID.push(item.id);
                theSelection.push(item.text);
            });
            $("#TemplateType").val(theID.join(","));

            var modelJSValue = '@Model.ID';
            if ($("#TemplateType").val() == "TemplateA") {
                $.getJSON("/Campaigns/GetTemplateAUrl/" + modelJSValue, function (data) {
                    if (data != 0) {
                        $('#showtemplate').attr("href", "/TemplateAs/Edit/" + data);
                    }
                });
            }

            if ($("#TemplateType").val() == "TemplateB") {
                $.getJSON("/Campaigns/GetTemplateBUrl/" + modelJSValue, function (data) {
                    if (data != 0) {
                        $('#showtemplate').attr("href", "/TemplateBs/Edit/" + data);
                    }
                });
            }

            if ($("#TemplateType").val() == "TemplateC") {
                $.getJSON("/Campaigns/GetTemplateCUrl/" + modelJSValue, function (data) {
                    if (data != 0) {
                        $('#showtemplate').attr("href", "/TemplateCs/Edit/" + data);
                    }
                });
            }
        });

        $("#createtemplate").click(function () {
            var modelJSValue = '@Model.ID';
            if ($("#TemplateType").val() == "TemplateA") {

                $.getJSON("/Campaigns/GetTemplateAUrl/" + modelJSValue, function (data) {
                    if (data == 0) {
                        swal({
                            title: "Are you sure?",
                            text: "Your will be creating a new template for the campaign",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "Yes, create it!",
                            cancelButtonText: "No, cancel it!",
                            closeOnConfirm: false,
                            closeOnCancel: false
                        },
                            function (isConfirm) {
                                if (isConfirm) {
                                    if ($("#TemplateType").val() == "TemplateA") {
                                        $.getJSON("/Campaigns/CreateTemplateA/" + modelJSValue, function (data) {
                                            $('#showtemplate').attr("href", "/TemplateAs/Edit/" + data);
                                        });
                                    }
                                    swal("Created!", "Template is created for the campaign.", "success");
                                } else {
                                    swal("Cancelled", "No Template is created.", "error");
                                }
                            });
                    }
                    else {
                        swal({
                            title: "Template Exists!",
                            text: "Selected Template already exists for campaign!",
                            type: "error"
                        });
                    }
                });
            }

            if ($("#TemplateType").val() == "TemplateB") {

                $.getJSON("/Campaigns/GetTemplateBUrl/" + modelJSValue, function (data) {
                    if (data == 0) {
                        swal({
                            title: "Are you sure?",
                            text: "Your will be creating a new template for the campaign",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "Yes, create it!",
                            cancelButtonText: "No, cancel it!",
                            closeOnConfirm: false,
                            closeOnCancel: false
                        },
                            function (isConfirm) {
                                if (isConfirm) {
                                    if ($("#TemplateType").val() == "TemplateB") {
                                        $.getJSON("/Campaigns/CreateTemplateB/" + modelJSValue, function (data) {
                                            $('#showtemplate').attr("href", "/TemplateBs/Edit/" + data);
                                        });
                                    }
                                    swal("Created!", "Template is created for the campaign.", "success");
                                } else {
                                    swal("Cancelled", "No Template is created.", "error");
                                }
                            });
                    }
                    else {
                        swal({
                            title: "Template Exists!",
                            text: "Selected Template already exists for campaign!",
                            type: "error"
                        });
                    }
                });
            }

            if ($("#TemplateType").val() == "TemplateC") {

                $.getJSON("/Campaigns/GetTemplateCUrl/" + modelJSValue, function (data) {
                    if (data == 0) {
                        swal({
                            title: "Are you sure?",
                            text: "Your will be creating a new template for the campaign",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "Yes, create it!",
                            cancelButtonText: "No, cancel it!",
                            closeOnConfirm: false,
                            closeOnCancel: false
                        },
                            function (isConfirm) {
                                if (isConfirm) {
                                    if ($("#TemplateType").val() == "TemplateC") {
                                        $.getJSON("/Campaigns/CreateTemplateC/" + modelJSValue, function (data) {
                                            $('#showtemplate').attr("href", "/TemplateCs/Edit/" + data);
                                        });
                                    }
                                    swal("Created!", "Template is created for the campaign.", "success");
                                } else {
                                    swal("Cancelled", "No Template is created.", "error");
                                }
                            });
                    }
                    else {
                        swal({
                            title: "Template Exists!",
                            text: "Selected Template already exists for campaign!",
                            type: "error"
                        });
                    }
                });
            }
        });

    </script>
}